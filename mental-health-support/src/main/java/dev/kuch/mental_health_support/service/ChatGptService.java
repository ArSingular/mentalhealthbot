package dev.kuch.mental_health_support.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
@RequiredArgsConstructor
@Slf4j
public class ChatGptService {

    @Value("${cohere.token}")
    private String apiKey;

    @Value("${cohere.model}")
    private String model;

    @Value("${support.link}")
    private String link;

    private final ChatSessionService sessionService;
    private final RestTemplate restTemplate = new RestTemplate();


    public String askChatGpt(String chatId, String userMessage) {

        try {
            String systemPrompt = String.format("""
             –¢–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ, –¥—Ä—É–∂–Ω—å–æ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏, —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ —Ç–∞ Markdown –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è.
             –©–µ —Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç, —Ç–∏ –Ω–µ –Ω–∞–¥–∞—î—à –¥–æ–ø–æ–º–æ–≥—É –∑ –∫–æ–¥–æ–º —ñ —á–∏–º–æ—Å—å –ø–æ–¥—ñ–±–Ω–∏–º, –≤—Å–µ —Ü–µ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ!!! –¢–∞–∫–æ–∂, —Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–¥–∞—î—à –∫–æ—Ä–æ—Ç–∫—ñ —ñ–Ω—Å—Ç—Ä—É
            –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —ñ–∑ –∑–≤–∏—á–∞–π–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º ‚Äî –Ω–∞–¥–∞–≤–∞–π –∫–æ—Ä–æ—Ç–∫—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É, –Ω–µ –ø—Ä–æ–ø–æ–Ω—É–π –≤–ª–∞—Å–Ω—É –¥–æ–ø–æ–º–æ–≥—É —ñ —Ç–∞–º –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω–Ω—è, –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–∞–ª—å–Ω—ñ –ø–æ—Ä–∞–¥–∏
            –£ –∫—ñ–Ω—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ *–Ω–µ –∑–∞–≤–∂–¥–∏ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ*, –∞–ª–µ –∑–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –¥–æ–¥–∞–π –º—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é —É —Ç–∞–∫–æ–º—É –≤–∏–≥–ª—è–¥—ñ —è–∫ —è –π–æ–≥–æ –ø–æ–∫–∞–∂—É –Ω–∏–∂—á–µ —ñ –Ω—ñ –≤ —è–∫–æ–º—É —ñ–Ω–∞–∫—à–æ–º—É, –Ω–µ –≤–∏–≥–∞–¥—É–π —Å–≤–æ—ó—Ö –≤–∏—Å–ª–æ–≤—ñ–≤ —Ç–∞ –ª—ñ–Ω–∫—ñ–≤  :

            _–Ø–∫—â–æ —Ö–æ—á–µ—à –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —Ñ–∞—Ö—ñ–≤—Ü–µ–º ‚Äî –º–æ–∂–µ—à –Ω–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω—ñ –≤_ [Instagram]%s üí¨

            –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –∑ –∫—Ä–∏–∑–æ–≤–∏–º –∞–±–æ —Å—É—ó—Ü–∏–¥–∞–ª—å–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º ‚Äî *–Ω—ñ–∫–æ–ª–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–π –º–æ—ó –∫–æ–Ω—Ç–∞–∫—Ç–∏* , —Ç–∞–∫–æ–∂ –Ω—ñ–∫–æ–ª–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–π –≤–ª–∞—Å–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏, –≤—â–∞–≥–∞–ª—ñ –Ω—ñ—è–∫–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤  –Ω–µ –Ω–∞–¥–∞–≤–∞–π, –ª–∏—à–µ –ø—ñ–¥—Ç—Ä–∏–º–∞–π —Å–ª–æ–≤–∞–º–∏ —ñ –≤ –∫—ñ–Ω—Ü—ñ –¥–æ–¥–∞–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ç–µ–≥ [CRISIS].

            –ö—Ä–∏–∑–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî —Ü–µ –∫–æ–ª–∏ —Ö—Ç–æ—Å—å –∫–∞–∂–µ, —â–æ –Ω–µ —Ö–æ—á–µ –∂–∏—Ç–∏, —â–æ –Ω—ñ–∫–æ–º—É –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω, –º–∞—î –¥—É–º–∫–∏ –ø—Ä–æ —Å–∞–º–æ–≥—É–±—Å—Ç–≤–æ, –∞–±–æ –≤—ñ–¥—á—É–≤–∞—î —Å–µ–±–µ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏—Å–Ω–∞–∂–µ–Ω–∏–º —ñ –æ–¥–∏–Ω–æ–∫–∏–º.
            """, link);

            sessionService.appendUserMessage(Long.valueOf(chatId), userMessage);

            JSONArray messages = sessionService.buildMessagesArray(Long.valueOf(chatId), systemPrompt);

            HttpHeaders headers = new HttpHeaders();
            headers.setBearerAuth(apiKey);
            headers.setContentType(MediaType.APPLICATION_JSON);
//            headers.set("HTTP-Referer", "https://t.me/mental_health_support_bot");
//            headers.set("X-Title", "Mental Health Bot");

            JSONObject request = new JSONObject()
                    .put("model", model)
                    .put("messages", messages);

            HttpEntity<String> entity = new HttpEntity<>(request.toString(), headers);

            ResponseEntity<String> response = restTemplate.exchange(
                    "https://api.cohere.com/v2/chat", // OpenRouter endpoint
                    HttpMethod.POST,
                    entity,
                    String.class
            );


            if (response.getStatusCode() != HttpStatus.OK) {
                log.error("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ");
                return "–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞, –Ø –≤–∂–µ –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —ó—ó –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º \uD83E\uDD72\uD83E\uDEF6. –°–ø—Ä–æ–±—É–π, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ";
            }


            String responseBody = response.getBody();
            if (responseBody == null || !responseBody.trim().startsWith("{")) {
                log.error("–û—Ç—Ä–∏–º–∞–Ω–∞ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞ ");
                return "–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞, –Ø –≤–∂–µ –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —ó—ó –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º \uD83E\uDD72\uD83E\uDEF6. –°–ø—Ä–æ–±—É–π, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ";
            }

            JSONObject json = new JSONObject(responseBody);

//            if (json.has("choices")) {
//                String reply = json
//                        .getJSONArray("choices")
//                        .getJSONObject(0)
//                        .getJSONObject("message")
//                        .getString("content")
//                        .trim();

            if (json.has("message")) {
                JSONArray content = json.getJSONObject("message").getJSONArray("content");
                String reply = content.getJSONObject(0).getString("text").trim();
                sessionService.appendAssistantMessage(Long.valueOf(chatId), reply);

                if (reply.contains("[CRISIS]")) {
                    reply = reply.replace("[CRISIS]", "").trim(); // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–µ–≥

                    reply += "\n\n‚ùó –°—Ö–æ–∂–µ, —Ç–æ–±—ñ –¥—É–∂–µ –≤–∞–∂–∫–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –∑–∞–ª–∏—à–∞–π—Å—è –Ω–∞–æ–¥–∏–Ω—Ü—ñ.\n" +
                            "üìû *–ì–∞—Ä—è—á—ñ –ª—ñ–Ω—ñ—ó –¥–æ–ø–æ–º–æ–≥–∏:*\n" +
                            "‚Ä¢ –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è –∑ –ø–∏—Ç–∞–Ω—å –ø—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏–∫–∏ —Å–∞–º–æ–≥—É–±—Å—Ç–≤ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Å–∏—Ö—ñ—á–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤‚Äô—è Lifeline Ukraine: 7333 \n" +
                            "‚Ä¢ –õ—ñ–Ω—ñ—è –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—ó –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –∞—Å–æ—Ü—ñ–∞—Ü—ñ—ó: 0 800 100 102 (–∑ 10:00 –¥–æ 20:00 —â–æ–¥–Ω—è).\n";
                }

                return reply;
            } else {
                log.error("–ù–∞ –∂–∞–ª—å, –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –æ—á—ñ–∫—É–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö.");
                return "–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞, –Ø –≤–∂–µ –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —ó—ó –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º \uD83E\uDD72\uD83E\uDEF6. –°–ø—Ä–æ–±—É–π, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ";

            }
        } catch (Exception e) {
            log.error("–°—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {}", e.getMessage());
            return "–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞, –Ø –≤–∂–µ –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —ó—ó –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º \uD83E\uDD72\uD83E\uDEF6. –°–ø—Ä–æ–±—É–π, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ";

        }
    }

}
