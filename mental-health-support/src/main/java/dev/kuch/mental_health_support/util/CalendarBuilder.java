package dev.kuch.mental_health_support.util;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.time.LocalDate;
import java.time.YearMonth;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Korol Artur
 * 19.06.2025
 */

public class CalendarBuilder {

    public static InlineKeyboardMarkup buildCalendar(int year, int month) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        rows.add(List.of(
                btn("–ü–Ω", "ignore"), btn("–í—Ç", "ignore"), btn("–°—Ä", "ignore"),
                btn("–ß—Ç", "ignore"), btn("–ü—Ç", "ignore"), btn("–°–±", "ignore"), btn("–ù–¥", "ignore")
        ));

        YearMonth ym = YearMonth.of(year, month);
        LocalDate firstDay = ym.atDay(1);
        int lengthOfMonth = ym.lengthOfMonth();
        int shift = (firstDay.getDayOfWeek().getValue() + 6) % 7;

        LocalDate today = LocalDate.now();
        List<InlineKeyboardButton> row = new ArrayList<>();

        for (int i = 0; i < shift; i++) {
            row.add(btn(" ", "ignore"));
        }

        for (int day = 1; day <= lengthOfMonth; day++) {
            LocalDate current = LocalDate.of(year, month, day);
            String label = String.valueOf(day);

            // üîµ –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—å–æ–≥–æ –¥–Ω—è
            if (current.equals(today)) {
                label = "üîµ" + day;
            }

            String callback = "calendar_" + year + "_" + month + "_" + day;
            row.add(btn(label, callback));

            if (row.size() == 7) {
                rows.add(row);
                row = new ArrayList<>();
            }
        }

        if (!row.isEmpty()) {
            rows.add(row);
        }

        int prevMonth = (month == 1) ? 12 : month - 1;
        int prevYear = (month == 1) ? year - 1 : year;

        int nextMonth = (month == 12) ? 1 : month + 1;
        int nextYear = (month == 12) ? year + 1 : year;

        String prevLabel = "‚¨ÖÔ∏è " + getMonthName(prevMonth);
        String nextLabel = getMonthName(nextMonth) + " ‚û°Ô∏è";

        rows.add(List.of(
                btn(prevLabel, "calendar_prev_" + prevYear + "_" + prevMonth),
                btn("üìÖ " + getMonthName(month) + " " + year, "ignore"),
                btn(nextLabel, "calendar_next_" + nextYear + "_" + nextMonth)
        ));

        return new InlineKeyboardMarkup(rows);
    }

    private static InlineKeyboardButton btn(String text, String callbackData) {
        return InlineKeyboardButton.builder()
                .text(text)
                .callbackData(callbackData)
                .build();
    }

    private static String getMonthName(int month) {
        return switch (month) {
            case 1 -> "–°—ñ—á–µ–Ω—å";
            case 2 -> "–õ—é—Ç–∏–π";
            case 3 -> "–ë–µ—Ä–µ–∑–µ–Ω—å";
            case 4 -> "–ö–≤—ñ—Ç–µ–Ω—å";
            case 5 -> "–¢—Ä–∞–≤–µ–Ω—å";
            case 6 -> "–ß–µ—Ä–≤–µ–Ω—å";
            case 7 -> "–õ–∏–ø–µ–Ω—å";
            case 8 -> "–°–µ—Ä–ø–µ–Ω—å";
            case 9 -> "–í–µ—Ä–µ—Å–µ–Ω—å";
            case 10 -> "–ñ–æ–≤—Ç–µ–Ω—å";
            case 11 -> "–õ–∏—Å—Ç–æ–ø–∞–¥";
            case 12 -> "–ì—Ä—É–¥–µ–Ω—å";
            default -> "";
        };
    }

}
